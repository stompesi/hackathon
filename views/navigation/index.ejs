<html>
  <head>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
      <title>simpleMap</title>
      <script src="/lib/jquery.min.js"></script>
      <script src="https://api2.sktelecom.com/tmap/js?version=1&format=javascript&appKey=2ca00645-e75c-4ecc-8111-7a3ebca5b846"></script>
      <script>					
          
							var map, routeSearchLayer, styleMap, point_vector_layer;
					//페이지가 로딩이 된 후 호출하는 함수입니다.
					function initTmap(){
						//map 생성
						//Tmap.map을 이용하여, 지도가 들어갈 div, 넓이, 높이를 설정합니다.
						map = new Tmap.Map({div:'map_div', width:'100%', height:'100%'});
						map.setCenter(new Tmap.LonLat("126.9850380932383", "37.566567545861645").transform("EPSG:4326", "EPSG:3857"), 15); //설정한 좌표를 "EPSG:3857"로 좌표변환한 좌표값으로 즁심점으로 설정합니다.
						var tData = new Tmap.TData(); //REST API 에서 제공되는 경로, 교통정보, POI 데이터를 쉽게 처리할 수 있는 클래스입니다.
						
						var s_lonLat = new Tmap.LonLat(127.00190640000005, 37.5708657); //김포 시작 좌표입니다.
						var e_lonLat = new Tmap.LonLat(126.975598, 37.554034); //도착 서울 좌표입니다.
						
						var optionObj = {
							reqCoordType:"WGS84GEO", //요청 좌표계 옵셥 설정입니다.
							resCoordType:"EPSG3857", //응답 좌표계 옵션 설정입니다.
							trafficInfo:"Y" //교통정보 표출 옵션 설정입니다.
									}
						
						tData.getRoutePlan(s_lonLat, e_lonLat, optionObj);//경로 탐색 데이터를 콜백 함수를 통해 XML로 리턴합니다.
						
						tData.events.register("onComplete", tData, onComplete);//데이터 로드가 성공적으로 완료되었을 때 발생하는 이벤트를 등록합니다.
						tData.events.register("onProgress", tData, onProgress);//데이터 로드중에 발생하는 이벤트를 등록합니다.
						tData.events.register("onError", tData, onError);//데이터 로드가 실패했을 떄 발생하는 이벤트를 등록합니다.
					}
					//데이터 로드가 성공적으로 완료되었을 때 발생하는 이벤트 함수 입니다. 
					function onComplete(){		  
						//교통정보 표출시 생성되는 LineColor 입니다.      
						var trafficColors = {
							extractStyles:true,
							
							// 사용자가 임의로 색상을 설정할 수 있습니다.
							// 교통정보 옵션 - 라인색상
							trafficDefaultColor:"#000000", //교통 정보가 없을 때
							trafficType1Color:"#009900", //원할
							trafficType2Color:"#8E8111", //지체
							trafficType3Color:"#FF0000", //정체
							
						};    
						var kmlForm = new Tmap.Format.KML(trafficColors).readTraffic(this.responseXML);
						var vectorLayer = new Tmap.Layer.Vector("vectorLayerID");
						vectorLayer.addFeatures(kmlForm);    
						
						map.addLayer(vectorLayer);
						//경로 그리기 후 해당영역으로 줌  
						map.zoomToExtent(vectorLayer.getDataExtent());
					}
					//데이터 로드중 발생하는 이벤트 함수입니다.
					function onProgress(){
						//alert("onComplete");
					}
					//데이터 로드시 에러가 발생시 발생하는 이벤트 함수입니다.
					function onError(){
						alert("onError");
					}
					// 맵 생성 실행
					initTmap();
      
      
			</script> 
	
  </head>
	<body onload="initTmap()">
	<% function numberWithCommas(x) { %>
	<%  return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","); %>
	<% } %>
	<div style="position: fixed;width: 100%;height: 5%;z-index: 10000000000;top: 0;background: white;font-size: 3em;color: #3e3e3e;text-align: center;padding-top: 5%;">
		<div class="back-section" style="    margin-top: 0.1em;
    min-width: 2.714286em;
    position: absolute;">
			<a href="javascript:history.back()">
				<img src="/img/back_button.png" style="width: 0.514285714em;
				height: 0.928571429em;">
			</a>
		</div>

		<div class="title-section">
			<span>
				배차 확인
			</span>
		</div>
	</div>
	<div id="wrap_map_div" style="margin-top: 16%;height: 83.5%;">	
			<div id="map_div"></div>        
	</div>
			
			<div style="position: fixed; width: 90%; height: 400px; z-index: 10000000000; bottom:9%; background: white; margin: 5%; border-radius: 2em; font-size: 2.4em;">
				<div style=" min-height: 142px; background: white; margin-left: 1em; margin-right: 1em; border-radius: 0.5em; padding: 1em; margin-top: 1em;">	
					<div style="height: 2.7em;">&nbsp;
						<div style="float: left;display: inline-block;font-size: 1em; font-weight: bold;"> <%= cago.startPoint %> </div>
						<div style="float: right;/* float: left; */display: inline-block;font-size: 1em; font-weight: bold;"> <%= cago.destinationPoint %> </div>
					</div>
					<div>
					</div>

					<div style="    position: relative;
					width: 100%;
					text-align: center;
					background: url(/img/list_line.png) no-repeat;
					background-size: 100% 0.7em;
					height: 1.5em;">
						<div style="display: inline-block; top: -0.3em; position: relative;background: white; color: #006fff;">
						<%= numberWithCommas(cago.startDestLength) %>km
						</div>
					</div>
					<div style="background: #E7F1FF;
					border-radius: 0.5em;
					height: 5.em;
					text-align: center;
					font-size: 2em;
					color: #333;
					opacity: 9%;
					padding-top: 0.4em;">
						<%= numberWithCommas(cago.cost) %>원
					</div>
				</div>
			</div>

			<div style="position: fixed; width: 100%; height: 5%; z-index: 10000000000; bottom:0; background: #006fff; font-size: 3em; color: white; text-align: center; padding-top: 5%;"
				data-event-cago-accept data-cago-id="<%= cago.seq %>">
				수락
			</div>

			<script>
					$('[data-event-cago-accept]').on('click', function(){
						$.ajax({
							url: '/api/cago/accept',
							type: 'POST',
							data: {
								cagoSeq: $(this).data('cago-id')
							},
							complete: (xhr, textStatus) => {
								if (xhr.status === 200) {
									alert("성공");
									window.location.href = '/driver';
								}
							}
						});
					}); 
			</script>
  </body>
</html>


